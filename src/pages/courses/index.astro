---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import CourseCard from '../../components/CourseCard.astro';
import FilterSidebar from '../../components/FilterSidebar.astro';
import { courses, filterCourses, sortCourses, type FilterOptions, type SortOption } from '../../data/courses';

// Parse URL parameters for filtering
const query = Astro.url.searchParams.get('q') || '';
const state = Astro.url.searchParams.get('state') || '';
const priceCategory = Astro.url.searchParams.get('priceCategory') as '$' | '$$' | '$$$' || '';
const minRatingParam = Astro.url.searchParams.get('minRating');
const minRating = minRatingParam ? parseFloat(minRatingParam) : undefined;
const amenitiesParam = Astro.url.searchParams.getAll('amenities');
const sortBy = (Astro.url.searchParams.get('sort') as SortOption) || 'featured';

// Build filter options
const filterOptions: FilterOptions = {
  query: query || undefined,
  state: state || undefined,
  priceCategory: priceCategory || undefined,
  minRating,
  amenities: amenitiesParam.length > 0 ? amenitiesParam : undefined
};

// Apply filters and sorting
let filteredCourses = filterCourses(filterOptions);
filteredCourses = sortCourses(filteredCourses, sortBy);

// Generate page title and description
let pageTitle = 'All Mini Golf Courses - Minigolf.directory';
let pageDescription = `Browse ${courses.length} amazing mini golf courses. Find the perfect mini golf destination with detailed information, ratings, and reviews.`;

if (query) {
  pageTitle = `Search Results for "${query}" - Mini Golf Courses`;
  pageDescription = `Found ${filteredCourses.length} mini golf courses matching "${query}". Browse detailed information, ratings, and reviews.`;
} else if (state) {
  pageTitle = `Mini Golf Courses in ${state} - Minigolf.directory`;
  pageDescription = `Discover ${filteredCourses.length} mini golf courses in ${state}. Find the perfect destination with reviews, ratings, and details.`;
} else if (filteredCourses.length !== courses.length) {
  pageTitle = `Filtered Mini Golf Courses - Minigolf.directory`;
  pageDescription = `Found ${filteredCourses.length} mini golf courses matching your criteria. Browse detailed information, ratings, and reviews.`;
}
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Header />
  
  <main>
    <!-- Header Section -->
    <section class="bg-gradient-to-r from-emerald-500 to-blue-600 text-white py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          {query ? (
            <>
              <h1 class="text-3xl sm:text-4xl font-bold mb-4">
                Search Results for "{query}"
              </h1>
              <p class="text-xl text-emerald-100 mb-6">
                Found {filteredCourses.length} {filteredCourses.length === 1 ? 'course' : 'courses'} matching your search
              </p>
            </>
          ) : (
            <>
              <h1 class="text-3xl sm:text-4xl font-bold mb-4">
                All Mini Golf Courses
              </h1>
              <p class="text-xl text-emerald-100 mb-6">
                Discover {courses.length} amazing mini golf destinations
              </p>
            </>
          )}
          
          <!-- Search Form -->
          <div class="max-w-2xl mx-auto">
            <form action="/courses" method="get" class="flex flex-col sm:flex-row gap-3">
              <div class="flex-1">
                <input
                  type="text"
                  name="q"
                  value={query}
                  placeholder="Search by name, location, or theme..."
                  class="w-full px-4 py-3 text-gray-900 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 shadow-sm"
                />
              </div>
              <button
                type="submit"
                class="px-6 py-3 bg-white text-emerald-600 font-medium rounded-lg hover:bg-gray-50 transition-colors shadow-sm"
              >
                Search
              </button>
            </form>
          </div>
        </div>
      </div>
    </section>
    
    <!-- Enhanced Filters and Results -->
    <section class="py-12 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Filter Summary and Quick Actions -->
        <div class="mb-8 flex flex-col lg:flex-row justify-between items-start gap-4">
          <div>
            <h2 class="text-2xl font-bold text-gray-900 mb-2">
              {query ? `Search: "${query}"` : 'All Mini Golf Courses'}
              {state && ` in ${state}`}
            </h2>
            <p class="text-gray-600">
              {filteredCourses.length} of {courses.length} courses
              {Object.values(filterOptions).some(v => v !== undefined && v !== '') && (
                <span class="ml-2 text-emerald-600 font-medium">â€¢ Filtered</span>
              )}
            </p>
          </div>
          
          <!-- Sort and View Options -->
          <div class="flex items-center gap-4">
            <form method="get" action="/courses" class="flex items-center gap-2">
              <!-- Preserve current filters -->
              {Object.entries(filterOptions).map(([key, value]) => {
                if (!value) return null;
                if (key === 'amenities' && Array.isArray(value)) {
                  return value.map(amenity => (
                    <input type="hidden" name={key} value={amenity} />
                  ));
                }
                return <input type="hidden" name={key} value={value.toString()} />;
              })}
              
              <label for="sort" class="text-sm text-gray-700 whitespace-nowrap">Sort by:</label>
              <select
                id="sort"
                name="sort"
                class="text-sm border border-gray-300 rounded px-3 py-2 bg-white focus:ring-2 focus:ring-emerald-500"
                onchange="this.form.submit()"
              >
                <option value="featured" selected={sortBy === 'featured'}>Featured</option>
                <option value="rating" selected={sortBy === 'rating'}>Highest Rated</option>
                <option value="newest" selected={sortBy === 'newest'}>Newest</option>
                <option value="price-low" selected={sortBy === 'price-low'}>Price: Low to High</option>
                <option value="price-high" selected={sortBy === 'price-high'}>Price: High to Low</option>
                <option value="name" selected={sortBy === 'name'}>Name: A to Z</option>
              </select>
            </form>
            
            <button
              id="mobile-filter-toggle"
              class="lg:hidden px-4 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50"
            >
              Filters
            </button>
          </div>
        </div>

        <!-- Main Content: Filters + Results -->
        <div class="flex gap-8">
          <!-- Filter Sidebar -->
          <aside class="hidden lg:block w-80 flex-shrink-0">
            <FilterSidebar currentFilters={filterOptions} resultCount={filteredCourses.length} />
          </aside>

          <!-- Mobile Filter Overlay -->
          <div
            id="mobile-filter-overlay"
            class="fixed inset-0 z-50 lg:hidden hidden"
          >
            <div class="absolute inset-0 bg-black bg-opacity-50" id="mobile-filter-backdrop"></div>
            <div class="absolute right-0 top-0 h-full w-80 bg-white overflow-y-auto">
              <div class="p-6">
                <div class="flex items-center justify-between mb-6">
                  <h3 class="text-lg font-semibold">Filters</h3>
                  <button id="mobile-filter-close" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                  </button>
                </div>
                <FilterSidebar currentFilters={filterOptions} resultCount={filteredCourses.length} />
              </div>
            </div>
          </div>

          <!-- Results -->
          <main class="flex-1 min-w-0">
            {filteredCourses.length > 0 ? (
              <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
                {filteredCourses.map((course) => (
                  <CourseCard course={course} />
                ))}
              </div>
            ) : (
              <div class="text-center py-16">
                <div class="max-w-md mx-auto">
                  <svg class="mx-auto h-24 w-24 text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                  </svg>
                  <h3 class="text-xl font-semibold text-gray-900 mb-2">No courses found</h3>
                  <p class="text-gray-600 mb-6">
                    No mini golf courses match your current filters. Try adjusting your criteria.
                  </p>
                  <div class="space-y-4">
                    <a
                      href="/courses"
                      class="inline-block px-6 py-2 bg-emerald-600 text-white font-medium rounded-lg hover:bg-emerald-700 transition-colors"
                    >
                      Clear All Filters
                    </a>
                    <div class="space-y-2">
                      <p class="text-sm text-gray-500">Or try popular searches:</p>
                      <div class="flex flex-wrap gap-2 justify-center">
                        <a href="/courses?q=pirate" class="text-sm text-emerald-600 hover:text-emerald-700 underline">Pirate</a>
                        <a href="/courses?q=glow" class="text-sm text-emerald-600 hover:text-emerald-700 underline">Glow-in-the-Dark</a>
                        <a href="/courses?q=space" class="text-sm text-emerald-600 hover:text-emerald-700 underline">Space</a>
                        <a href="/courses?state=FL" class="text-sm text-emerald-600 hover:text-emerald-700 underline">Florida</a>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}

            <!-- Add Course CTA -->
            {filteredCourses.length > 3 && (
              <div class="mt-16 text-center bg-white rounded-xl p-8 shadow-sm">
                <h3 class="text-xl font-semibold text-gray-900 mb-2">
                  Own a Mini Golf Course?
                </h3>
                <p class="text-gray-600 mb-6">
                  Join our directory and reach thousands of mini golf enthusiasts looking for their next adventure.
                </p>
                <a
                  href="/submit-course"
                  class="inline-flex items-center px-6 py-3 bg-emerald-600 text-white font-medium rounded-lg hover:bg-emerald-700 transition-colors"
                >
                  Submit Your Course
                  <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                  </svg>
                </a>
              </div>
            )}
          </main>
        </div>
      </div>
    </section>
    
    <!-- Popular Searches -->
    <section class="py-12 bg-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Popular Searches</h2>
        <div class="flex flex-wrap justify-center gap-3">
          <a href="/courses?q=adventure" class="bg-gray-100 hover:bg-emerald-100 px-4 py-2 rounded-full text-sm font-medium text-gray-700 hover:text-emerald-700 transition-colors">
            Adventure Courses
          </a>
          <a href="/courses?q=family" class="bg-gray-100 hover:bg-emerald-100 px-4 py-2 rounded-full text-sm font-medium text-gray-700 hover:text-emerald-700 transition-colors">
            Family Friendly
          </a>
          <a href="/courses?q=water" class="bg-gray-100 hover:bg-emerald-100 px-4 py-2 rounded-full text-sm font-medium text-gray-700 hover:text-emerald-700 transition-colors">
            Water Features
          </a>
          <a href="/courses?q=dinosaur" class="bg-gray-100 hover:bg-emerald-100 px-4 py-2 rounded-full text-sm font-medium text-gray-700 hover:text-emerald-700 transition-colors">
            Dinosaur Theme
          </a>
          <a href="/courses?q=windmill" class="bg-gray-100 hover:bg-emerald-100 px-4 py-2 rounded-full text-sm font-medium text-gray-700 hover:text-emerald-700 transition-colors">
            Classic Windmills
          </a>
          <a href="/courses?q=caves" class="bg-gray-100 hover:bg-emerald-100 px-4 py-2 rounded-full text-sm font-medium text-gray-700 hover:text-emerald-700 transition-colors">
            Cave Holes
          </a>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</BaseLayout>

<script>
  // Mobile filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileFilterToggle = document.getElementById('mobile-filter-toggle');
    const mobileFilterOverlay = document.getElementById('mobile-filter-overlay');
    const mobileFilterClose = document.getElementById('mobile-filter-close');
    const mobileFilterBackdrop = document.getElementById('mobile-filter-backdrop');

    function showMobileFilters() {
      mobileFilterOverlay?.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }

    function hideMobileFilters() {
      mobileFilterOverlay?.classList.add('hidden');
      document.body.style.overflow = '';
    }

    mobileFilterToggle?.addEventListener('click', showMobileFilters);
    mobileFilterClose?.addEventListener('click', hideMobileFilters);
    mobileFilterBackdrop?.addEventListener('click', hideMobileFilters);

    // Handle escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !mobileFilterOverlay?.classList.contains('hidden')) {
        hideMobileFilters();
      }
    });
  });
</script>